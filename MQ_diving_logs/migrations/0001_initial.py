# Generated by Django 4.2.5 on 2023-11-03 09:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DivingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dive_number', models.IntegerField(blank=True, null=True, verbose_name='Dive Number')),
                ('dive_date', models.DateField(blank=True, null=True, verbose_name='Dive Date')),
                ('dive_site', models.CharField(blank=True, max_length=255, verbose_name='Dive Site')),
                ('environment', models.CharField(blank=True, choices=[('sea', 'Sea'), ('ocean', 'Ocean'), ('lake', 'Lake')], max_length=10, verbose_name='Environment')),
                ('depth', models.FloatField(blank=True, null=True, verbose_name='Depth (m)')),
                ('duration_dive', models.IntegerField(blank=True, null=True, verbose_name='Dive Duration (min)')),
                ('surface_return', models.CharField(blank=True, max_length=255, verbose_name='Surface Return (h/min)')),
                ('decompression_stop', models.CharField(blank=True, max_length=255, verbose_name='Decompression Stop')),
                ('bottle_type', models.IntegerField(blank=True, null=True, verbose_name='Bottle Type')),
                ('wet_suit', models.CharField(blank=True, max_length=255, verbose_name='Wet Suit')),
                ('ballast', models.CharField(blank=True, max_length=255, verbose_name='Ballast')),
                ('dive_type', models.CharField(blank=True, choices=[('training', 'Training'), ('exploration', 'Exploration'), ('night', 'Night dive'), ('drift', 'Drift dive'), ('wreck', 'Wreck'), ('other', 'Other')], max_length=15, verbose_name='Dive Type')),
                ('gas_type', models.CharField(blank=True, choices=[('nitrox', 'Nitrox'), ('trimix', 'Trimix'), ('rebreather', 'Rebreather')], max_length=12, verbose_name='Gas Type')),
                ('group', models.CharField(blank=True, max_length=255, verbose_name='Group')),
                ('consumption_start', models.IntegerField(blank=True, null=True, verbose_name='Consumption Start')),
                ('consumption_end', models.IntegerField(blank=True, null=True, verbose_name='Consumption End')),
                ('air_temperature', models.FloatField(blank=True, null=True, verbose_name='Air Temperature')),
                ('water_temperature', models.FloatField(blank=True, null=True, verbose_name='Water Temperature')),
                ('weather', models.CharField(blank=True, choices=[('sun', 'Sunny'), ('cloud', 'Cloudy'), ('rain', 'Rain'), ('downpour', 'Downpour')], max_length=10, verbose_name='Weather')),
                ('visibility', models.CharField(blank=True, max_length=255, verbose_name='Visibility')),
                ('current', models.CharField(blank=True, max_length=255, verbose_name='Current')),
                ('observations', models.TextField(blank=True, verbose_name='Observations')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='signatures/', verbose_name='Signature')),
                ('stamp', models.ImageField(blank=True, null=True, upload_to='stamps/', verbose_name='Stamp')),
                ('status', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('VALIDÉ', 'Validé'), ('REFUSÉ', 'Refusé')], default='EN_ATTENTE', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_dives', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InstructorComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Commentaire')),
                ('comment_date', models.DateTimeField(auto_now_add=True)),
                ('diving_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MQ_diving_logs.divinglog')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-comment_date'],
            },
        ),
    ]
